.. -*- coding: utf-8 -*-

.. _choix_et_ajout_d_un_module:

==========================
Choix et ajout d'un module
==========================

:Author: Michael Launay
:Version: 0.1.0
:Révision: `<https://svn.plone.org/svn/collective/collective.trainingmanual/trunk/fr/integrateur/source/choix_et_ajout_d_un_module.txt>`_

Copyright (C) 2010 Michael Launay <michaellaunay AT ecreall.com>.

Chacun est autorisé à copier, distribuer et/ou modifier ce document
suivant les termes de la licence Paternité-Pas
d'Utilisation Commerciale-Partage des Conditions Initiales à l'Identique 2.0
France accessible à http://creativecommons.org/licenses/by-nc-sa/2.0/fr

Introduction
============

Plone est un Content Management System, c'est à dire un portail collaboratif
qui permet de gérer des contenus tels que des documents, des images, des
événements, des vidéos, etc.

Il permet de créer et de gérer les cycles de publications des contenus, ainsi
on peut affecter des rôles aux membres leur permettant ou non de créer, modifier,
voir, ou changer les règles des contenus.

Plone permet facilement la création de nouveaux types de contenu, de nouvelles
règles de gestion, de nouveaux rôles ou groupes.

Cette finesse de la gestion des droits associée au fait que Plone est un logiciel
libre a permis la création de nombreuses extensions permettant soit de
spécialiser Plone soit de l'étendre.

Ces extensions ont d'abord été appelées "produits" mais à partir de la version
4 de Plone nous parlons de "modules".

La première étape consiste à identifier son besoin.

Ensuite, il faut vérifier que Plone ne propose pas déjà les fonctionnalités
désirées.

Pour cela, nous pouvons commencer par voir si Plone fournit de base un type
de contenu spécifique de ce besoin.

S'il existe un contenu, il faut alors vérifier que le workflow, qui lui est
associé, correspond à notre besoin et si nécessaire en développer un autre.

S'il n'existe pas de contenu correspondant à notre besoin et que celui-ci est
générique, alors il existe surement un module couvrant partiellement ou
complètement notre besoin.

On va donc chercher et sélectionner un module.

Rechercher et sélectionner un module
====================================

Le site plone.org contient la vitrine des modules Plone disponibles.

`<http://plone.org/products>`__

Depuis la version 4 de Plone le site de la communauté Plone possède un nouveau
classement des modules qui permet entre autres de les chercher par popularité.

Un article sur cette nouvelle interface a été écrit sur le site de la communauté
française http://plone.fr/news/nouveautes-plone-products

Les modules suivent un cycle de vie de développement, les plus utilisés sont
maintenus et sont adaptés aux nouvelles versions de Plone rapidement.

Avant d'utiliser un module, il faut se poser les questions suivantes :

* Ce module est-il compatible avec notre version de Plone ?
* Depuis combien de temps existe le module ?
* Est-il encore utilisé ?
* Est-il maintenu ?
* Y a-t-il eu des remontées de bogues et est-ce possible ?
* Si oui y a-t-il eu des corrections apportées et au bout de combien de temps ?
* La société ou les développeurs derrière ce module, sont-ils actifs dans la
  communauté ?
* A-t-on accès au code source du module ?
* Le code est-il sur le dépôt de la communauté Python ou Plone ?
* Le module respecte-t-il les standards de programmation de la communauté ?
* Est-il documenté ?
* Modifie-t-il Plone ?

Suivez ensuite la méthode d'installation indiquée sur la documentation du produit.
À défaut d'être précisée, c'est toujours la même, nous la présentons plus loin.

Installer un module
===================

Les modules Plone proposés sur plone.org sont hébergés sur des dépôts.

* Le dépôt des programmes open source de Python, appelé "pypi" et accessible sur
  le lien http://pypi.python.org/pypi
* Les dépôts des projets et sociétés dont les adresses peuvent être trouvées sur
  internet.

Le dépôt Pypi est celui de la communauté Python qui est le langage de
programmation de Plone. Pour y trouver un module spécifique de Plone il faut
faire une recherche en utilisant le mot-clé Plone et les mots que vous pensez
être associés à votre besoin.

Pypi affichera les "egg" liées à Plone, en effet depuis les versions 3 de Plone
les modules sont fournis sous forme de paquets appelés "egg" dont on détaillera
l'anatomie et comment les ajouter à Plone plus loin. Plone est désormais
entièrement constitué de eggs qui forment autant de bibliothèques.

Les modules hébergés exclusivement par les sites de leurs développeurs sont plus
durs à identifier et leur capital confiance est moins bon.

Pour installer un module, il suffit en général d'ajouter le nom du module
à la valeur `eggs` dans le fichier de configuration (buildout.cfg),
et de relancer l'installation du site.
(Pour plus d'information sur l'installation de Plone, consultez la documentation intégrateur).

Il vous faut ensuite aller dans la configuration du site,

.. figure:: ./workflowslocaux_images/selectionneconfiguration.jpg
    :align: center

section `Modules`,

.. figure:: ./parametrage/lien-conf-modules.png
    :align: center

puis activer le module.

.. figure:: ./workflowslocaux_images/activemodule.jpg
    :align: center

De nombreux exemples d'installation de modules seront présentés dans cette documentation.

Tester le module
================

Ensuite il faut absolument essayer le module sur une copie du site de production
pour vérifier qu'il correspond à notre besoin et surtout qu'il ne casse pas nos
autres modules et respecte l'intégrité de notre site.

Il faut alors dérouler des tests de validation du portail pour vérifier
l'intégrité du portail.

Puis il faut tester le fonctionnement du module pour vérifier son adéquation
avec le besoin.

Si le besoin n'est pas complètement satisfait il faut alors chercher un module
plus complet ou compléter le développement du module sélectionné.

Le fait de compléter un module déjà existant par rapport à en créer un ex nihilo
est à préférer, surtout si les évolutions que l'on souhaite apporter sont dans
la logique du module.

Cette attitude vertueuse permet :

- de réduire les coûts en ne recréant pas ce qui existe déjà,
- de bénéficier d'une communauté d'utilisateurs et de développeurs,
- d'améliorer la couverture fonctionnelle d'un module ce qui du coup augmente
  ses chances d'être réutilisé et donc maintenu.

