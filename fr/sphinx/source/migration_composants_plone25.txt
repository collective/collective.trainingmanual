.. -*- coding: utf-8 -*-

.. _migration_composants_plone25:

==================================================
Migration des composants développés pour Plone 2.5
==================================================

Définition
==========

La façon d'écrire un produit Plone a complètement changé entre la version 2.5
et 3. Les workflows ne sont plus écrit en Python, mais en XML. Plone 3
privilégie plus un développement à la Zope 3, amplifiant une tendance qui avait
fait son apparition avec Plone 2.5 (utilisation de Five et de la notation ZCML)

Savoir
======

- Migration des anciens modèles UML vers la dernière version de ArgoUML
- Génération de code avec la dernière version de ArchGenXML
- Migration du code de l'ancien composant vers le nouveau composant

Outils
======

Sous Ubuntu pour comparer deux dossiers, on peut utiliser kompare (non éditable) ou meld (éditable) : ::

    $ sudo apt-get install kompare meld

Pour utiliser *meld* par exemple : ::

    $ meld dossier1 dossier2

Sous MacOSX, les éditeurs BBEdit et TextWrangler proposent également une comparaison de deux dossiers.

Outils pour la preview des documents
====================================

Pour le support de la prévisualisation des documentations avec ARFilePreview et
AROfficeTransforms, avec les systèmes Ubuntu ou Debian :

.. code-block:: sh
    
    $ sudo apt-get install wv poppler-utils ppthtml xlhtml pstotext unrtf


Installation du produit AttachmentField
=======================================

Éditez le fichier :file:`buildout.cfg` comme ceci :

.. code-block:: cfg

    [buildout]
    parts = ... productdistros

    [instance]
    products = ...  ${productdistros:location}

    [productdistros]
    # For more information on this step and configuration options see:
    # http://pypi.python.org/pypi/plone.recipe.distros
    recipe = plone.recipe.distros
    urls = http://plone.org/products/attachmentfield/releases/1.4.4/attachmentfield-1-4-4.tgz
    nested-packages =
    version-suffix-packages =


Génération du produit AgileKnowledgeBase
=========================================

.. todo:: Indiquer les pré-requis. On n'y comprend rien à la lecture de ce seul doc.

Tout d'abord générez le produit AgileKnowledgeBase avec la dernière version de
ArchGenXML.

Vincent fait un checkout :

.. code-block:: sh

    $ svn co --username vincent http://devagile/Agile
    $ cd Agile

Anthony fait un checkout, crée et commit un dossier :mod:`packages` :

.. code-block:: sh

    $ svn co --username anthony http://devagile/Agile
    $ cd Agile
    $ svn mkdir packages
    $ svn ci -m "Add new packages directory"

Vincent fait un update :

.. code-block:: sh

    $ svn log -v 
    ------------------------------------------------------------------------
    r1 | anthony | 2009-06-04 14:51:20 +0200 (jeu 04 jun 2009) | 1 line
    Chemins modifiés :
       A /packages

    add new packages directory
    ------------------------------------------------------------------------

Anthony fait :

.. code-block:: sh

    $ cd /tmp
    $ paster create -t basic_namespace Products.AgileKnowledgeBase \
      --svn-repository=http://devagile/Agile/packages/
    $ cd Products.AgileKnowledgeBase
    $ svn stat
    $ svn rm --force Products.AgileKnowledgeBase.egg-info
    $ svn ci -m "Add skeleton"
    $ cd projet/packages
    $ svn up
    $ cd Products.AgileKnowledgeBase/trunk
    $ svn mkdir model
    $ svn ci -m "Added a model directory"

Copiez-collez le fichier zargo dans ce dossier model et ajoutez le au
référentiel svn :

.. code-block:: sh
   
    $ svn add model/AgileKB.zargo
    $ svn ci -m"Added zargo model"

    $ cd Products
    $ archgenxml ../model/AgileKB.zargo

Note : sous Windows les images sont générées bizarrement.

Éditez le fichier :file:`profiles/default/types.xml` pour changer le meta_type
du type d'agile_document :

.. code-block:: xml

    <object 
      name="agile_document"
      meta_type="Factory-based Type Information for Plone Articles content types"/>

Vous devrez faire attention à garder ce changement à chaque fois que vous
regénèrerez le modèle.

Mettez ``1.0`` pour la version dans :file:`profiles/default/metadata.xml` :

.. code-block:: sh

    $ svn add AgileKnowledgeBase/*
    $ svn ci -m"Add generated code"

Ajoutez :mod:`Products.PloneArticle` dans ``install_requires`` de
:file:`setup.py`.

Dans :file:`profiles/default/metadata.xml` :

.. code-block:: xml

    <?xml version="1.0"?>
    <metadata>
      <version>1</version>
      <dependencies>
        <dependency>profile-Products.PloneArticle:default</dependency>
      </dependencies>
    </metadata>

Ajoutez ``Products.PloneArticle`` dans l'option ``eggs`` de la section
``[instance]`` sinon il ne sera pas dans le ``sys.path`` du script
:command:`bin/instance`

Configuration du calendrier
===========================

Il faut ajouter le type ``agile_event`` dans le :term:`tool`
:guilabel:`portal_calendar` pour que les évènements s'affichent dans le
calendrier.

Création d'un nouveau Plone Site
================================

Créez un nouveau Plone Site, installez les produits.

Migration du contenu
====================

.. todo:: Trop détaillé et spécifique. Plutôt expliquer les principes des 3 principales méthodes de migration

Sur le serveur en production :

- Passer le storage de :guilabel:`FSS` en :guilabel:`AttributeStorage`
- Faire un export au format :term:`zexp` de :guilabel:`acl_users`, :guilabel:`portal_memberdata`, :guilabel:`portal_groupdata`, :guilabel:`aide`, :guilabel:`dossiers des espaces`
- Copier les logs

Sur le nouveau serveur :

- copier tous les :term:`zexp` dans le dossier :file:`parts/instance/import/`
- copier les logs en les renommant
- importer les utilisateurs :

  1. Go to your new site and Delete the following objects (all relative to the
  Plone site root):

   * acl_users -> Contents -> local_roles
   * acl_users -> Contents -> mutable_properties
   * acl_users -> Contents -> portal_role_manager
   * acl_users -> Contents -> source_groups
   * acl_users -> Contents -> source_users
   * portal_groupdata
   * portal_memberdata

  2. Copy the corresponding objects from the old site and paste it into the new one at the same location.
  3. For the 5 new objects in acl_users go to their Activate tab and activate them (check all checkboxes and click on Update). 
  4. Cut & paste Members' content

- importer les espaces
- Aller dans plonearticle_tool et faire la migration en sélectionnant la version
  courante

Ajout nouvelles fonctionnalités
===============================

Prévisualisation des documents Word et PDF
------------------------------------------

.. admonition::
   Hommage à Jean-Nicolas Jnut-Bès

   Jean-Nicolas, auteur principal de :mod:`ARFilePreview` et
   :mod:`AROfficeTransforms` nous a quitté à la suite d'une longue maladie qu'il
   a courageusement combattu. Nous rendons ici hommage à l'homme et au créateur
   qu'il fut.

`ARFilePreview`_ est un produit qui ajoute la prévisualisation des documents Word et PDF.

Vous pouvez installer le produit `AROfficeTransforms`_ pour installer des transformations pour Excel et OpenOffice.org.

La dernière release de :mod:`ARFilePreview` sur plone.org est assez vieille,
donc vous allez télécharger la dernière version de la branche v2.  (La branche
v2 fonctionne avec portal_transforms, le trunk (v3) fonctionne avec
plone.transforms.)  Pour cela, vous allez utiliser la recipe
`infrae.subversion`_ pour faire un checkout du produit :

.. code-block:: cfg

    [buildout]
    parts =
        ...
        development-products

    [development-products]
    recipe = infrae.subversion
    urls =
        http://svn.plone.org/svn/collective/ARFilePreview/branches/ARFilePreview-v2@88162 ARFilePreview
    location = products

Il faut que vous ayez la section ``productdistros`` activée pour que le produit
soit pris en compte au démarrage.

.. _`infrae.subversion`: http://pypi.python.org/pypi/infrae.subversion
    
Pour installer :mod:`AROfficeTransforms`, ajoutez l'URL de l'archive dans la
section ``productdistros`` :
    
.. code-block:: cfg

    [productdistros]
    ...
    urls = 
        ...
        http://plone.org/products/arofficetransforms/releases/0.9.2/arofficetransforms-0-9-2.tgz


Génération de pdf
-----------------

Installez :mod:`Products.SmartPrintNG`.

Pour générer les PDFs, SmartPrintNG a besoin de ``fop`` :

.. code-block:: sh

    $ apt-get install fop

Dans la section ``[instance]``, ajoutez :

.. code-block:: cfg

    environment-vars =
        FOP_HOME /usr/bin

fop cherche la librairie Java servlet-api.jar. Vous pouvez rechercher dans quel
package Ubuntu il se trouve avec ``apt-file search``.

Tout d'abord installez la commande apt-file et mettez à jour la base de données
:

.. code-block:: sh

    $ sudo apt-get install apt-file
    $ sudo apt-file update

Cherchez où se trouve ce fichier :

.. code-block:: sh

    $ apt-file search servlet-api.jar
    eclipse-platform: /usr/lib/eclipse/plugins/org.eclipse.tomcat_5.5.17/lib/servlet-api.jar
    groovy: /usr/share/groovy/lib/servlet-api.jar
    libservlet2.4-java: /usr/share/java/servlet-api.jar
    libtomcat5.5-java: /usr/share/tomcat5.5/common/lib/servlet-api.jar
    tomcat6: /var/lib/tomcat6/lib/servlet-api.jar
    tomcat6-common: /usr/share/tomcat6/lib/servlet-api.jar

Installez le package voulu :

.. code-block:: sh

    $ sudo apt-get install libservlet2.4-java


Exercice
========

Migration du composant "base de connaissances" comme cas pratique.

.. _AROfficeTransforms: http://plone.org/products/arofficetransforms

.. _ARFilePreview: http://plone.org/products/arfilepreview
