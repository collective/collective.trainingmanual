[buildout]
extends-cache = extends-cache
extends =
    buildout.cfg
parts +=
    zeoserver
    instance1
    instance2
    instance3
    instance4
    varnish-build
    varnish-conf
    varnish
    haproxy
    haproxy-conf
    supervisor
    munin1
    munin2
    munin3
    munin4

eggs +=
    plone.app.caching

[hosts]
zeoserver   = 127.0.0.1
instance1   = 127.0.0.1
instance2   = 127.0.0.1
instance3   = 127.0.0.1
instance4   = 127.0.0.1
varnish     = 127.0.0.1
haproxy     = 127.0.0.1
supervisor  = 127.0.0.1

[ports]
zeoserver   = 8100
instance1   = 9880
instance2   = 9881
instance3   = 9882
instance4   = 9883
varnish     = 8000
haproxy     = 5501
supervisor  = 9001

[users]
zope        = zope
varnish     = zope
haproxy     = zope

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = ${hosts:zeoserver}:${ports:zeoserver}

[instance1]
recipe = plone.recipe.zope2instance
shared-blob = on
zeo-client = true
zeo-address = ${zeoserver:zeo-address}
effective-user = ${users:zope}
http-address = ${hosts:instance1}:${ports:instance1}
event-log-custom =
  %import iw.rotatezlogs
  <rotatelogfile>
    level info
    path ${buildout:directory}/var/log/${:_buildout_section_name_}.log
    max-bytes 1MB
    compression bzip2
    backup-count 720
  </rotatelogfile>
  <rotatelogfile>
    level error
    path ${buildout:directory}/var/log/error.log
    max-bytes 1MB
    compression bzip2
    backup-count 720
  </rotatelogfile>
access-log-custom =
  %import iw.rotatezlogs
  <rotatelogfile>
    path ${buildout:directory}/var/log/${:_buildout_section_name_}-Z2.log
    max-bytes 1MB
    compression bzip2
    backup-count 720
  </rotatelogfile>

[instance2]
<= instance1
http-address = ${hosts:instance2}:${ports:instance2}
ftp-address = 9821

[instance3]
<= instance1
http-address = ${hosts:instance3}:${ports:instance3}

[instance4]
<= instance1
http-address = ${hosts:instance4}:${ports:instance4}

[supervisor]
recipe = collective.recipe.supervisor
port = ${ports:supervisor}
user = admin
password = admin
plugins = superlance
supervisord-conf = ${buildout:directory}/etc/supervisord.conf
serverurl = http://${hosts:supervisor}:${ports:supervisor}
programs =
    10 zeoserver ${zeoserver:location}/bin/runzeo ${zeoserver:location} true ${users:zope}
    20 instance1 ${buildout:bin-directory}/instance1 [console] ${instance1:location} true
    30 instance2 ${buildout:bin-directory}/instance2 [console] ${instance2:location} true
    40 instance3 ${buildout:bin-directory}/instance3 [console] ${instance3:location} true
    50 instance4 ${buildout:bin-directory}/instance4 [console] ${instance4:location} true
    60 haproxy ${buildout:bin-directory}/haproxy [-f ${buildout:directory}/etc/haproxy.conf -db] true
    70 varnish ${buildout:bin-directory}/varnish ${varnish:location} true
eventlisteners =
    memmon TICK_60 ${buildout:bin-directory}/memmon [-p instance1=600MB -p instance2=600MB -p instance3=600MB -p instance4=600MB -m development+demo@example.com]
    crashmail PROCESS_STATE ${buildout:bin-directory}/crashmail [-m development+demo@example.com]

[varnish-build]
recipe = zc.recipe.cmmi
url = ${varnish:download-url}

[varnish-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/varnish.vcl.in
output = ${buildout:directory}/etc/varnish.vcl

[varnish]
recipe = plone.recipe.varnish
daemon = ${buildout:parts-directory}/varnish-build/sbin/varnishd
bind = ${hosts:varnish}:${ports:varnish}
#backends = ${haproxy-conf:bind}
config = ${varnish-conf:output}
cache-size = 256M
user = ${users:varnish}
mode = foreground

[haproxy]
recipe = plone.recipe.haproxy
url = ${versions:haproxy-url}
cpu = i686
target = linux26
pcre = 1

[haproxy-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/haproxy.conf.in
output = ${buildout:directory}/etc/haproxy.conf
maxconn = 32000
ulimit-n = 65536
user = ${users:haproxy}
group = ${users:haproxy}
bind = ${hosts:haproxy}:${ports:haproxy}

[munin1]
recipe = zc.recipe.egg
eggs = munin.zope
scripts = munin=munin1
arguments = ip_address='${hosts:instance1}', http_address='${ports:instance1}', user="${instance1:user}"

[munin2]
recipe = zc.recipe.egg
eggs = munin.zope
scripts = munin=munin2
arguments = ip_address='${hosts:instance2}', http_address='${ports:instance2}', user="${instance2:user}"

[munin3]
recipe = zc.recipe.egg
eggs = munin.zope
scripts = munin=munin3
arguments = ip_address='${hosts:instance3}', http_address='${ports:instance3}', user="${instance3:user}"

[munin4]
recipe = zc.recipe.egg
eggs = munin.zope
scripts = munin=munin4
arguments = ip_address='${hosts:instance4}', http_address='${ports:instance4}', user="${instance4:user}"
